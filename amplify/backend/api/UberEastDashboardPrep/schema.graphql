enum OrderStatus {
  PENDING
  COMPLETED
  ACCEPTED
  DECLINED
}

type OrderDish @model @auth(rules: [{allow: public}]) {
  id: ID!
  quantity: Int!
  Dish: Dish @hasOne
  orderID: ID! @index(name: "byOrder")
}

type Order @model @auth(rules: [{allow: public}]) {
  id: ID!
  userID: ID! @index(name: "byUser")
  Restaurant: Restaurant @hasOne
  total: Float!
  status: OrderStatus!
  OrderDishes: [OrderDish] @hasMany(indexName: "byOrder", fields: ["id"])
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  address: String!
  sub: String!
  Orders: [Order] @hasMany(indexName: "byUser", fields: ["id"])
}

type Dish @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  description: String!
  price: Float!
  image: String
  restaurantID: ID! @index(name: "byRestaurant")
}

type Restaurant @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  address: String!
  image: String!
  Dishes: [Dish] @hasMany(indexName: "byRestaurant", fields: ["id"])
  adminSub: String
}
 